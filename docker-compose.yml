services:
  odyssey-microservices:
    build:
      context: ./odyssey
      dockerfile: Dockerfile
    command: odyssey /etc/odyssey/odyssey.conf
    volumes:
      - ./odyssey/auth/odyssey.conf:/etc/odyssey/odyssey.conf
    ports:
      - 6432:6432
    networks:
      - nats
    depends_on:
      postgres-microservices:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c 'cat < /dev/null > /dev/tcp/localhost/6432' || exit 1"]
      interval: 3s
      timeout: 3s
      retries: 10

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    stop_signal: SIGINT
    stop_grace_period: 10s
    ports:
      - 13690:13690
    volumes:
      - .:/app/auth-service
    networks:
      - nats
    environment:
      LOG_LEVEL: info
      LOG_SERVICE_NAME: auth-service
      LOG_PATH: /var/log/auth-service
      DB_DATA_SOURCE: postgres://postgres:1789@odyssey-microservices:6432/postgres?sslmode=disable
      DB_PATH_TO_MIGRATION: file://internal/repo/pg/migration
      DB_APPLICATION_SCHEMA: auth
      TOKEN_JWT_KEY: kg#n5Q2SP7A4/T.v
      TOKEN_LIFE_TIME: 3h
      APP_SHUTDOWN_TIMEOUT: 30s
      NATS_URL: nats:4222 
    depends_on:
      nats:
        condition: service_started
      odyssey-microservices:
        condition: service_healthy
      promtail: 
        condition: service_started
    labels:
      logging: "promtail"

  device-management-service:
    build:
      context: ./device-management-service
      dockerfile: Dockerfile
    stop_signal: SIGINT
    stop_grace_period: 10s
    ports:
      - 13692:13692
    volumes:
      - .:/app/device-management-service
    networks:
      - nats
    environment:
      LOG_LEVEL: info
      LOG_SERVICE_NAME: device-management-service
      LOG_PATH: /var/log/device-management-service
      DB_DATA_SOURCE: postgres://postgres:1789@odyssey-microservices:6432/postgres?sslmode=disable
      DB_PATH_TO_MIGRATION: file://internal/repo/pg/migration
      DB_APPLICATION_SCHEMA: devices
      SERVER_JWT_KEY: kg#n5Q2SP7A4/T.v
      SERVER_ADDR: :13692
      SERVER_LOG_QUERYS: "false"
      APP_SHUTDOWN_TIMEOUT: 30s
      NATS_URL: nats:4222
    depends_on:
      auth-service:
        condition: service_started
      odyssey-microservices:
        condition: service_healthy
      nats: 
        condition: service_started
      promtail: 
        condition: service_started
    labels:
      logging: "promtail"

  data-processing-service:
    build:
      context: ./data-processing-service
      dockerfile: Dockerfile
    stop_signal: SIGINT
    stop_grace_period: 10s
    volumes:
      - .:/app/data-processing-service
    networks:
      - nats
    restart: unless-stopped
    environment:
      LOG_LEVEL: info
      LOG_SERVICE_NAME: data-processing-service
      LOG_PATH: /var/log/data-processing-service
      DB_DATA_SOURCE: postgres://postgres:1789@odyssey-microservices:6432/postgres?sslmode=disable
      DB_PATH_TO_MIGRATION: file://internal/repo/pg/migration
      DB_APPLICATION_SCHEMA: dataprocessing
      APP_SHUTDOWN_TIMEOUT: 30s
      NATS_URL: nats:4222
      SERVICE_NOTIFICATION_PERIOD: 5m
      NATS_TIMEOUT: 30m
      SERVER_JWT_KEY: kg#n5Q2SP7A4/T.v
      SERVER_ADDR: :13694
      SERVER_TOKEN_LIFE_TIME: 3h
      SERVER_LOG_QUERYS: "false"
    ports:
      - 13694:13694
    expose:
      - 13694
    depends_on:
      device-management-service:
        condition: service_started
      odyssey-microservices:
        condition: service_healthy
      nats:
        condition: service_started
      promtail: 
        condition: service_started
    labels:
      logging: "promtail"

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    stop_signal: SIGINT
    stop_grace_period: 10s
    ports:
      - 13691:13691
      - 9081:9081
    expose:
      - 13691
      - 9081
    volumes:
      - .:/app/notification-service
    networks:
      - nats
    environment:
      LOG_LEVEL: info
      LOG_SERVICE_NAME: notification-service
      LOG_PATH: /var/log/notification-service
      APP_SHUTDOWN_TIMEOUT: 30s
      NATS_URL: nats:4222
      NATS_TIMEOUT: 30m
      SMTP_HOST: 195.122.250.187
      SMTP_PORT: 25
      SMTP_USER: 123
      SMTP_PASSWORD: 321
      HTTP_HOST: 195.122.250.187
      HTTP_PORT: 12345
      HTTP_ENDPOINT: /email_getter
    depends_on:
      auth-service:
        condition: service_started
      device-management-service:
        condition: service_started
      data-processing-service:
        condition: service_started
      nats:
        condition: service_started
      promtail: 
        condition: service_started
    labels:
      logging: "promtail"

  api-gateway-service:
    build:
      context: ./api-gateway-service
      dockerfile: Dockerfile
    stop_signal: SIGINT
    stop_grace_period: 10s
    ports:
      - 13693:13693
    expose:
      - 13693
    volumes:
      - .:/app/api-gateway-service
    networks:
      - nats
    environment:
      LOG_LEVEL: info
      LOG_SERVICE_NAME: api-gateway-service
      LOG_PATH: /var/log/api-gateway-service
      SERVER_JWT_KEY: kg#n5Q2SP7A4/T.v
      SERVER_ADDR: :13693
      SERVER_TOKEN_LIFE_TIME: 3h
      SERVER_LOG_QUERYS: "false"
      APP_SHUTDOWN_TIMEOUT: 30s
      NATS_URL: nats:4222
      NATS_TIMEOUT: 30m

    depends_on:
      auth-service:
        condition: service_started
      device-management-service:
        condition: service_started
      nats:
        condition: service_started
      promtail: 
        condition: service_started
    labels:
      logging: "promtail"

  data-ingestion-service:
    build:
      context: ./data-ingestion-service
      dockerfile: Dockerfile
    stop_signal: SIGINT
    stop_grace_period: 10s
    ports:
      - 13695:13695
      - 9082:9082
    expose:
      - 13695
      - 9082
    volumes:
      - .:/app/data-ingestion-service
    networks:
      - nats
    environment:
      LOG_LEVEL: info
      LOG_SERVICE_NAME: data-ingestion-service
      LOG_PATH: /var/log/data-ingestion-service
      APP_SHUTDOWN_TIMEOUT: 30s
      NATS_URL: nats:4222
      NATS_TIMEOUT: 1s
      SERVER_ADDR: :13695
      SERVER_LOG_QUERYS: "false"
      SERVER_DEVICE_CHECK_PERIOD: 5
    depends_on:
      device-management-service:
        condition: service_started
      nats:
        condition: service_started
      data-processing-service:
        condition: service_started
      promtail: 
        condition: service_started
    labels:
      logging: "promtail"
    deploy:
      resources:
        limits:
          cpus: '0.5'

  postgres-microservices:
    image: postgres
    command: 
    - -p 5434
    - -c 
    - hba_file=/var/lib/postgresql/data/pg_hba.conf
    - -c 
    - password_encryption=md5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1789
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/micro/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5434"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5434:5434
    volumes:
      - postgres-microservices-db:/var/lib/postgresql/data/micro
      - ./postgres-config/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    networks:
      - nats
    deploy:
      resources:
        limits:
          cpus: '2'

  postgres-microservices-exporter:
    command: '--no-collector.stat_bgwriter'
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_URI: "postgres-microservices:5434/postgres?sslmode=disable"
      DATA_SOURCE_USER: postgres
      DATA_SOURCE_PASS: 1789
      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
    volumes:
      - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    networks:
      - nats
    depends_on:
      - postgres-microservices

  nats:
    image: nats:latest
    command: --js --sd /data -p 4222 -m 8222
    ports:
    - 4222:4222
    - 6222:6222
    - 8222:8222
    volumes:
    - ./jetstream-cluster/n1:/data
    networks:
      - nats

  prometheus-nats-exporter:
    image: natsio/prometheus-nats-exporter:latest
    command: "-connz -varz -jsz=all -subz -healthz -routez http://nats:8222"
    ports:
      - "7777:7777"
    depends_on:
      nats:
        condition: service_started
    networks:
      - nats
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
      - "9093:9093"
    command:
      - "-config.expand-env"
      - "-config.file=/etc/loki/config.yaml"
    environment:
      - LOKI_PORT=3100
    volumes:
      - ./loki:/etc/loki

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - ./promtail:/etc/promtail
      - /var/log:/var/promtail
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    command:
      - "-config.file=/etc/promtail/promtail-config.yml"
    depends_on:
      loki: 
        condition: service_started

volumes:
  postgres-microservices-db:

networks:
  nats:
    name: nats